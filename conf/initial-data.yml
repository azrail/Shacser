# Generated by logisima-play-yml (http://github.com/sim51/logisima-play-yml).
# This module is a part of LogiSima (http://www.logisima.com).

Keyword(Keyword_12):
    name: Markdown

User(User_1):
    email: lethargicprince@googlemail.com
    password: 8x7def978
    firstName: Sascha
    lastName: Hanke
    gender: male
    fullname: Sascha Hanke
    isAdmin: 'true'
    canPost: 'true'

Post(Post_3):
    title: Markdown WYSIWYG mit markItUp!
    postedAt: '2011-03-27'
    content: "Als Basis dient wie immer das [Play framework Tutorial Blog](http://www.playframework.org/documentation/1.1.1/guide1\
  \ \"Play framework Tutorial Blog\"), was übrigens auch die Basis für dieses Blog\
  \ ist. \r\n\r\n### Zu bearbeitende Dateien\r\n    - app/controllers/Application.java\r\
  \n    - public/markitup/sets/markdown/set.js\r\n    - app/views/Admin/form.html\r\n    - app/views/admin.html\r\
  \n    - conf/routes\r\n\r\n\r\n### Benötigte Dateien\r\n    - [markdownj](http://markdownj.org/\
  \ \"markdownj\") \r\n    - [markItUp!](http://markitup.jaysalvat.com//downloads/download.php?id=releases/latest\
  \ \"markItUp! pack 1.1.10\")\r\n    - [Basic Markdown set](http://markitup.jaysalvat.com/downloads/download.php?id=markupsets/markdown\
  \ \"Basic Markdown set\")\r\n    - [markdowPreview.html](http://blog.aheron.de/public/markdowPreview.txt\
  \ \"markdowPreview.html\")\r\n\r\n### und los gehts\r\n\r\n    - markdownj-1.0.2b4-0.3.0.jar\
  \ nach /lib verschieben\r\n    - markItUp! nach /public/markitup entpacken\r\n    - Basic\
  \ Markdow nach /public/markitup/sets entpacken\r\n    - Inhalt von markdowPreview.html\
  \ in /app/views/Application/markdowPreview.html speichern\r\n\r\nDie Ordner Struktur\
  \ in /public/markitup/ sollte nun wie folgt aussehen: \r\n\r\n![Ordner Struktur](http://blog.aheron.de/public/images/blog/Markdown_WYSIWYG_markItUp_folder_structure.png\
  \ \"Ordner Struktur\")\r\n\r\n#### Application.java\r\nhinzugefügt wird eine Funktion\
  \ die sich um die Vorschaufähigkeit von markItUp! kümmert.\r\n\r\n    import com.petebevin.markdown.MarkdownProcessor;\r\
  \n\r\n    public static void markdowPreview() {\t\t\r\n        String content =\
  \ Application.request.params.get(\"data\").toString();\r\n        MarkdownProcessor\
  \ m = new MarkdownProcessor();\r\n        String html_content = m.markdown(content);\r\
  \n        render(\"Application/markdowPreview.html\", html_content);\r\n    }\r\n\
  \r\n#### set.js\r\n    previewParserPath:  '/markdowPreview'\r\n\r\n#### routes\r\
  \n    POST   /markdowPreview             Application.markdowPreview\r\n\r\n####\
  \ admin.html\r\nFolgender Code wird dem `<head>` bereich hinzugefügt.\r\n\r\n  \
  \  <link rel=\"stylesheet\" type=\"text/css\" href=\"@{'/public/markitup/skins/markitup/style.css'}\"\
  \ />\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"@{'/public/markitup/sets/markdown/style.css'}\"\
  \ />\r\n    <script src=\"@{'/public/markitup/jquery.markitup.js'}\"></script>\r\
  \n    <script src=\"@{'/public/markitup/sets/markdown/set.js'}\"></script>\r\n \
  \   <script language=\"javascript\">\r\n        $(document).ready(function()  {\r\
  \n            $('#markdown').markItUp(mySettings);\r\n            $('#object_content').markItUp(mySettings);\r\
  \n        });\r\n    </script>\r\n\r\n#### form.html\r\nDer Textarea muss noch eine\
  \ id mitgeteilt werden, dazu muss `<textarea name=\"${field.name}\"` durch `<textarea\
  \ id=\"markdown\" name=\"${field.name}\"` ersetzt werden\r\n\r\n"
    description: Markdown WYSIWYG fürs playframework mithilfe von markItUp! und markdownj
    gistId: ''
    html_content: "<p>Als Basis dient wie immer das <a href=\"http://www.playframework.org/documentation/1.1.1/guide1\"\
  \ title=\"Play framework Tutorial Blog\">Play framework Tutorial Blog</a>, was ü\
  brigens auch die Basis für dieses Blog ist. </p>\n\n<h3>Zu bearbeitende Dateien</h3>\n\
  \n<ul>\n<li>app/controllers/Application.java</li>\n<li>public/markitup/sets/markdown/set.js</li>\n\
  <li>app/views/Admin/form.html</li>\n<li>app/views/admin.html</li>\n<li>conf/routes</li>\n\
  </ul>\n\n<h3>Benötigte Dateien</h3>\n\n<ul>\n<li><a href=\"http://markdownj.org/\"\
  \ title=\"markdownj\">markdownj</a></li>\n<li><a href=\"http://markitup.jaysalvat.com//downloads/download.php?id=releases/latest\"\
  \ title=\"markItUp! pack 1.1.10\">markItUp!</a></li>\n<li><a href=\"http://markitup.jaysalvat.com/downloads/download.php?id=markupsets/markdown\"\
  \ title=\"Basic Markdown set\">Basic Markdown set</a></li>\n<li><a href=\"http://blog.aheron.de/public/markdowPreview.txt\"\
  \ title=\"markdowPreview.html\">markdowPreview.html</a></li>\n</ul>\n\n<h3>und los\
  \ gehts</h3>\n\n<ul>\n<li>markdownj-1.0.2b4-0.3.0.jar nach /lib verschieben</li>\n\
  <li>markItUp! nach /public/markitup entpacken</li>\n<li>Basic Markdow nach /public/markitup/sets\
  \ entpacken</li>\n<li>Inhalt von markdowPreview.html in /app/views/Application/markdowPreview.html\
  \ speichern</li>\n</ul>\n\n<p>Die Ordner Struktur in /public/markitup/ sollte nun\
  \ wie folgt aussehen: </p>\n\n<p><img src=\"http://blog.aheron.de/public/images/blog/Markdown_WYSIWYG_markItUp_folder_structure.png\"\
  \ alt=\"Ordner Struktur\" title=\"Ordner Struktur\" /></p>\n\n<h4>Application.java</h4>\n\
  \n<p>hinzugefügt wird eine Funktion die sich um die Vorschaufähigkeit von markItUp!\
  \ kümmert.</p>\n\n<pre><code>import com.petebevin.markdown.MarkdownProcessor;\n\n\
  public static void markdowPreview() {       \n    String content = Application.request.params.get(\"\
  data\").toString();\n    MarkdownProcessor m = new MarkdownProcessor();\n    String\
  \ html_content = m.markdown(content);\n    render(\"Application/markdowPreview.html\"\
  , html_content);\n}\n</code></pre>\n\n<h4>set.js</h4>\n\n<pre><code>previewParserPath:\
  \  '/markdowPreview'\n</code></pre>\n\n<h4>routes</h4>\n\n<pre><code>POST   /markdowPreview\
  \             Application.markdowPreview\n</code></pre>\n\n<h4>admin.html</h4>\n\
  \n<p>Folgender Code wird dem <code>&lt;head&gt;</code> bereich hinzugefügt.</p>\n\
  \n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"@{'/public/markitup/skins/markitup/style.css'}\"\
  \ /&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"@{'/public/markitup/sets/markdown/style.css'}\"\
  \ /&gt;\n&lt;script src=\"@{'/public/markitup/jquery.markitup.js'}\"&gt;&lt;/script&gt;\n\
  &lt;script src=\"@{'/public/markitup/sets/markdown/set.js'}\"&gt;&lt;/script&gt;\n\
  &lt;script language=\"javascript\"&gt;\n    $(document).ready(function()  {\n  \
  \      $('#markdown').markItUp(mySettings);\n        $('#object_content').markItUp(mySettings);\n\
  \    });\n&lt;/script&gt;\n</code></pre>\n\n<h4>form.html</h4>\n\n<p>Der Textarea\
  \ muss noch eine id mitgeteilt werden, dazu muss <code>&lt;textarea name=\"${field.name}\"\
  </code> durch <code>&lt;textarea id=\"markdown\" name=\"${field.name}\"</code> ersetzt\
  \ werden</p>\n"
    author: User_1

Keyword(Keyword_11):
    name: WYSIWYG



Post(Post_4):
    title: RSS Feeds mit dem Playframework
    postedAt: '2011-03-29'
    content: "<img src=\"http://blog.aheron.de/public/images/blog/RSS_Feeds_mit_dem_Playframework.png\"\
  \ alt=\"RSS Feeds\" title=\"RSS Feeds mit dem Playframework\" style=\"float: left;\
  \ margin-right:20px;\" width=\"173\" height=\"172\">\r\n\r\n> RSS (Really Simple\
  \ Syndication) ist eine seit dem Anfang des Jahres 2000 kontinuierlich weiterentwickelte\
  \ Familie von Formaten für die einfache und strukturierte Veröffentlichung von Ä\
  nderungen auf Websites (z. B. News-Seiten, Blogs, Audio-/Video-Logs etc.) in einem\
  \ standardisierten Format (XML). RSS-Dienste werden in der Regel in Form spezieller\
  \ Service-Websites (sogenannter RSS-Channels) angeboten. Ein RSS-Channel versorgt\
  \ den Adressaten oft, ähnlich einem Nachrichtenticker, mit kurzen Informationsblö\
  cken, die aus einer Schlagzeile mit kurzem Textanriss und einem Link zur Originalseite\
  \ bestehen.     - <small>[http://de.wikipedia.org](http://de.wikipedia.org/wiki/RSS\
  \ \"\")</small>\r\n\r\n### Zu bearbeitende Dateien\r\n\r\n    - app/controllers/Application.java\r\
  \n    - app/views/feeds/FeedPosts.rss\r\n    - app/views/main.html\r\n    - conf/application.conf\r\
  \n    - conf/routes\r\n\r\n### Application.java\r\n\r\nIn `addDefaults()` kommen 2 neue\
  \ `renderArgs` hinzu:\r\n\r\n    static void addDefaults() {\r\n        renderArgs.put(\"\
  description\", Play.configuration.getProperty(\"blog.description\"));\r\n      \
  \  renderArgs.put(\"autor\", Play.configuration.getProperty(\"blog.autor\"));\r\n\
  \    }\r\n\r\ndiesen Schritt kann man sich sparen und auch gleich die Tags in der\
  \ FeedPosts.rss eintragen, allerdings kann man sie so auch auf der Homepage wiederverwerten.\r\
  \n\r\nDie neue Funktion `rssFeedPosts()` kümmert sich um das Befüllen und Rendern\
  \ der RSS Feeds\r\n\r\n    public static void rssFeedPosts() {\r\n        List<Post>\
  \ posts = Post.find(\"order by postedAt desc\").fetch();\r\n        response.contentType\
  \ = \"application/rss+xml; charset=utf-8\";\r\n        render(\"feeds/FeedPosts.rss\"\
  , posts);\r\n    }\r\n\r\nwie man sieht muss man hier leider noch sehr unelegant\
  \ den Content Type und das Charset mit angeben, in späteren Versionen des Playframeworks\
  \ kann der mimetype dann hoffentlich gleich in der application.conf gesetzt werden.\r\
  \n\r\n### FeedPosts.rss\r\n\r\nDiese neue Datei wird im Verzeichnis _app/views/feeds/_\
  \ angelegt und mit folgenden Inhalt befüllt:\r\n\r\n    <?xml version=\"1.0\" encoding=\"\
  UTF-8\"?>\r\n    <rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\"\
  >\r\n        <channel>\r\n            <title>yab. Das Technik Blog</title>\r\n \
  \           <link>@@{Application.index()}</link>\r\n            <description>${description}</description>\r\
  \n            <language>de-de</language>\r\n            <copyright>${autor}</copyright>\r\
  \n            <pubDate>${new Date().format(\"EEE, dd MMM yyyy HH:mm:ss Z\", 'en')}</pubDate>\r\
  \n            <atom:link href=\"@@{Application.rssFeedPosts()}\" rel=\"self\" type=\"\
  application/rss+xml\" />\r\n            #{list items:posts, as:'post'}\r\n     \
  \       <item>\r\n                <title>${post.title.escapeXml()}</title>\r\n \
  \               <description>${post.html_content.escapeXml()}</description>\r\n\
  \                <link>@@{Application.show(post.id)}</link>\r\n                <author>${post.author.email.escapeXml()}\
  \ (${post.author.fullname.escapeXml()})</author>\r\n                <guid>@@{Application.show(post.id)}</guid>\r\
  \n                <pubDate>${post.postedAt.format(\"EEE, dd MMM yyyy HH:mm:ss Z\"\
  , 'en')}</pubDate>\r\n            </item>\r\n            #{/list}\r\n        </channel>\r\
  \n    </rss>\r\n\r\n### main.html\r\n\r\nDamit der Browser/Suchmaschine den neuen\
  \ RSS-Feed auch findet, braucht es nur den folgenden Link im `<head>` Bereich der\
  \ Homepage\r\n\r\n    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"\
  RSS-Feed von yab. Das Technik Blog\" href=\"@@{Application.rssFeedPosts()}\" />\r\
  \n\r\n### application.conf\r\n\r\n    blog.description=yab. Das Technik Blog, Play\
  \ Framework, Tutorials, Linux, Webserver und mehr.\r\n    blog.autor=Sascha Hanke\r\
  \n\r\n### routes\r\n\r\nzu guter letzt noch eine neue Route hinzugefügt und fertig\
  \ ist der RSS-Feed\r\n\r\n    GET    /posts.rss                Application.rssFeedPosts\r\
  \n\r\nAuf die selbe Art und Weise lassen sich natürlich auch Atom-Feeds oder XML-Sitemaps\
  \ erzeugen. Viel Spaß beim ausprobieren!"
    description: Wie man dem Playframework Tutorial Blog RSS Feeds (oder Atom/Sitemaps) beibringt.
    gistId: ''
    html_content: "<p><img src=\"http://blog.aheron.de/public/images/blog/RSS_Feeds_mit_dem_Playframework.png\"\
  \ alt=\"RSS Feeds\" title=\"RSS Feeds mit dem Playframework\" style=\"float: left;\
  \ margin-right:20px;\" width=\"173\" height=\"172\"></p>\n\n<blockquote>\n  <p>RSS\
  \ (Really Simple Syndication) ist eine seit dem Anfang des Jahres 2000 kontinuierlich\
  \ weiterentwickelte Familie von Formaten für die einfache und strukturierte Verö\
  ffentlichung von Änderungen auf Websites (z. B. News-Seiten, Blogs, Audio-/Video-Logs\
  \ etc.) in einem standardisierten Format (XML). RSS-Dienste werden in der Regel\
  \ in Form spezieller Service-Websites (sogenannter RSS-Channels) angeboten. Ein\
  \ RSS-Channel versorgt den Adressaten oft, ähnlich einem Nachrichtenticker, mit\
  \ kurzen Informationsblöcken, die aus einer Schlagzeile mit kurzem Textanriss und\
  \ einem Link zur Originalseite bestehen.     - <small><a href=\"http://de.wikipedia.org/wiki/RSS\"\
  \ title=\"\">http://de.wikipedia.org</a></small></p>\n</blockquote>\n\n<h3>Zu bearbeitende\
  \ Dateien</h3>\n\n<ul>\n<li>app/controllers/Application.java</li>\n<li>app/views/feeds/FeedPosts.rss</li>\n\
  <li>app/views/main.html</li>\n<li>conf/application.conf</li>\n<li>conf/routes</li>\n\
  </ul>\n\n<h3>Application.java</h3>\n\n<p>In <code>addDefaults()</code> kommen 2\
  \ neue <code>renderArgs</code> hinzu:</p>\n\n<pre><code>static void addDefaults()\
  \ {\n    renderArgs.put(\"description\", Play.configuration.getProperty(\"blog.description\"\
  ));\n    renderArgs.put(\"autor\", Play.configuration.getProperty(\"blog.autor\"\
  ));\n}\n</code></pre>\n\n<p>diesen Schritt kann man sich sparen und auch gleich\
  \ die Tags in der FeedPosts.rss eintragen, allerdings kann man sie so auch auf der\
  \ Homepage wiederverwerten.</p>\n\n<p>Die neue Funktion <code>rssFeedPosts()</code>\
  \ kümmert sich um das Befüllen und Rendern der RSS Feeds</p>\n\n<pre><code>public\
  \ static void rssFeedPosts() {\n    List&lt;Post&gt; posts = Post.find(\"order by\
  \ postedAt desc\").fetch();\n    response.contentType = \"application/rss+xml; charset=utf-8\"\
  ;\n    render(\"feeds/FeedPosts.rss\", posts);\n}\n</code></pre>\n\n<p>wie man sieht\
  \ muss man hier leider noch sehr unelegant den Content Type und das Charset mit\
  \ angeben, in späteren Versionen des Playframeworks kann der mimetype dann hoffentlich\
  \ gleich in der application.conf gesetzt werden.</p>\n\n<h3>FeedPosts.rss</h3>\n\
  \n<p>Diese neue Datei wird im Verzeichnis <em>app/views/feeds/</em> angelegt und\
  \ mit folgenden Inhalt befüllt:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"\
  UTF-8\"?&gt;\n&lt;rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\"\
  &gt;\n    &lt;channel&gt;\n        &lt;title&gt;yab. Das Technik Blog&lt;/title&gt;\n\
  \        &lt;link&gt;@@{Application.index()}&lt;/link&gt;\n        &lt;description&gt;${description}&lt;/description&gt;\n\
  \        &lt;language&gt;de-de&lt;/language&gt;\n        &lt;copyright&gt;${autor}&lt;/copyright&gt;\n\
  \        &lt;pubDate&gt;${new Date().format(\"EEE, dd MMM yyyy HH:mm:ss Z\", 'en')}&lt;/pubDate&gt;\n\
  \        &lt;atom:link href=\"@@{Application.rssFeedPosts()}\" rel=\"self\" type=\"\
  application/rss+xml\" /&gt;\n        #{list items:posts, as:'post'}\n        &lt;item&gt;\n\
  \            &lt;title&gt;${post.title.escapeXml()}&lt;/title&gt;\n            &lt;description&gt;${post.html_content.escapeXml()}&lt;/description&gt;\n\
  \            &lt;link&gt;@@{Application.show(post.id)}&lt;/link&gt;\n          \
  \  &lt;author&gt;${post.author.email.escapeXml()} (${post.author.fullname.escapeXml()})&lt;/author&gt;\n\
  \            &lt;guid&gt;@@{Application.show(post.id)}&lt;/guid&gt;\n          \
  \  &lt;pubDate&gt;${post.postedAt.format(\"EEE, dd MMM yyyy HH:mm:ss Z\", 'en')}&lt;/pubDate&gt;\n\
  \        &lt;/item&gt;\n        #{/list}\n    &lt;/channel&gt;\n&lt;/rss&gt;\n</code></pre>\n\
  \n<h3>main.html</h3>\n\n<p>Damit der Browser/Suchmaschine den neuen RSS-Feed auch\
  \ findet, braucht es nur den folgenden Link im <code>&lt;head&gt;</code> Bereich\
  \ der Homepage</p>\n\n<pre><code>&lt;link rel=\"alternate\" type=\"application/rss+xml\"\
  \ title=\"RSS-Feed von yab. Das Technik Blog\" href=\"@@{Application.rssFeedPosts()}\"\
  \ /&gt;\n</code></pre>\n\n<h3>application.conf</h3>\n\n<pre><code>blog.description=yab.\
  \ Das Technik Blog, Play Framework, Tutorials, Linux, Webserver und mehr.\nblog.autor=Sascha\
  \ Hanke\n</code></pre>\n\n<h3>routes</h3>\n\n<p>zu guter letzt noch eine neue Route\
  \ hinzugefügt und fertig ist der RSS-Feed</p>\n\n<pre><code>GET    /posts.rss  \
  \              Application.rssFeedPosts\n</code></pre>\n\n<p>Auf die selbe Art und\
  \ Weise lassen sich natürlich auch Atom-Feeds oder XML-Sitemaps erzeugen. Viel Spaß\
  \ beim ausprobieren!</p>\n"
    author: User_1
    comments:
    - Comment_1
    - Comment_2
    - Comment_3
    - Comment_4

Keyword(Keyword_10):
    name: markItUp!

Tag(Tag_16):
    name: Tutorial

Post(Post_1):
    title: dies & das.
    postedAt: '2011-03-27'
    content: "## Git Basics\r\nAls umsteiger von Subversion fühlt man sich in Git doch\
  \ ein wenig verloren. Heute geht es um das ignorieren von Dateien, was Git auch\
  \ gleich schöner als Subversion macht.\r\n\r\n**.gitignore**\r\n> .project \r\n\
  >  \r\n> .settings   \r\n>\r\n> *.log   \r\n\r\nWie man sieht kann man Dateien/Verzeichnisse\
  \ direkt Ignorieren und natürlich mit Wildcards arbeiten. Ist eine Datei bereits\
  \ unter Versionskontrolle reicht es nicht diese einfach in **.gitignore** aufzunehmen\
  \ sondern diese muss zusätzlich mit **git rm --cached *datei* ** gelöscht werden.\
  \ Betrifft es ein ganzes Verzeichnis **git rm -r --cached *verzeichnis* ** benutzen.\r\
  \n\r\n\r\n## Mongoose     - Sortieren von Ergebnissen\r\nCode:\r\n  \r\n>`Document.find({},\
  \ [], {sort:[['`**titel**`','`**ascending**`']]} , function(err, documents) {//\
  \ cool Stuff});`  \r\n  \r\nfunktioniert einwandfrei. Naiv wie bin, dachte ich folgendes\
  \ würde auch einfach funktionieren:\r\n\r\n>`Document.find({}, [], {sort:[['`**date**`','`**ascending**`']]}\
  \ , function(err, documents) {// cool Stuff});` \r\n  \r\naber das wäre ja zu einfach,\
  \ nach ein wenig Googlen sowie Try & Error habe ich endlich eine funktionierende\
  \ Variante gefunden:\r\n \r\n>`Document.find({}, [], {sort:[['`**date**`','`**-1**`']]}\
  \ , function(err, documents) {// cool Stuff});`  \r\n\r\n\r\n## minix.\r\n**watch\
  \ -d -n 2 ‘df; ls -FlAt;’** spuckt geänderten Dateien in Echtzeit aus. \r\n\r\n"
    description: Heute geht es um Git Basics (.gitignore), das sortieren von Ergebnissen in Moongose und den Linux befehl watch
    gistId: ''
    html_content: "<h2>Git Basics</h2>\n\n<p>Als umsteiger von Subversion fühlt man sich\
  \ in Git doch ein wenig verloren. Heute geht es um das ignorieren von Dateien, was\
  \ Git auch gleich schöner als Subversion macht.</p>\n\n<p><strong>.gitignore</strong></p>\n\
  \n<blockquote>\n  <p>.project </p>\n  \n  <p>.settings   </p>\n  \n  <p>*.log  \
  \ </p>\n</blockquote>\n\n<p>Wie man sieht kann man Dateien/Verzeichnisse direkt\
  \ Ignorieren und natürlich mit Wildcards arbeiten. Ist eine Datei bereits unter\
  \ Versionskontrolle reicht es nicht diese einfach in <strong>.gitignore</strong>\
  \ aufzunehmen sondern diese muss zusätzlich mit <em>*git rm --cached *datei</em>\
  \ <em>* gelöscht werden. Betrifft es ein ganzes Verzeichnis *</em>git rm -r --cached\
  \ <em>verzeichnis</em> ** benutzen.</p>\n\n<h2>Mongoose     - Sortieren von Ergebnissen</h2>\n\
  \n<p>Code:</p>\n\n<blockquote>\n  <p><code>Document.find({}, [], {sort:[['</code><strong>titel</strong><code>','</code><strong>ascending</strong><code>']]}\
  \ , function(err, documents) {// cool Stuff});</code>  </p>\n</blockquote>\n\n<p>funktioniert\
  \ einwandfrei. Naiv wie bin, dachte ich folgendes würde auch einfach funktionieren:</p>\n\
  \n<blockquote>\n  <p><code>Document.find({}, [], {sort:[['</code><strong>date</strong><code>','</code><strong>ascending</strong><code>']]}\
  \ , function(err, documents) {// cool Stuff});</code> </p>\n</blockquote>\n\n<p>aber\
  \ das wäre ja zu einfach, nach ein wenig Googlen sowie Try &amp; Error habe ich\
  \ endlich eine funktionierende Variante gefunden:</p>\n\n<blockquote>\n  <p><code>Document.find({},\
  \ [], {sort:[['</code><strong>date</strong><code>','</code><strong>-1</strong><code>']]}\
  \ , function(err, documents) {// cool Stuff});</code>  </p>\n</blockquote>\n\n<h2>minix.</h2>\n\
  \n<p><strong>watch -d -n 2 ‘df; ls -FlAt;’</strong> spuckt geänderten Dateien in\
  \ Echtzeit aus. </p>\n"
    author: User_1

Tag(Tag_15):
    name: XML-Sitemap

Post(Post_2):
    title: Play Framework und die robots.txt
    postedAt: '2011-03-27'
    content: "## Zu bearbeitende Dateien:\r\n`app/controllers/Application.java`\r\n\r\n\
  `conf/routes`\r\n\r\n## neue Dateien:\r\n`public/robots.txt`\r\n\r\nIn der Application.java\
  \ kommt eine neue statische Funktion hinzu welche sich um das cachen und anzeigen\
  \ der robots.txt kümmert.\r\n\r\n    public static void robots() throws FileNotFoundException\
  \ {\r\n        File robots = play.Play.getFile(\"public/robots.txt\");\r\n     \
  \   InputStream is = new FileInputStream(robots);\r\n        response.setHeader(\"\
  Content-Length\", robots.length() + \"\");\r\n        response.cacheFor(\"2h\");\r\
  \n        response.contentType = \"text/html\";\r\n        response.direct = is;\r\
  \n    }\r\n\r\n\r\nUm diese Funktion dem Play Framework bekannt zu machen reicht\
  \ ein Eintrag in der routes Datei:\r\n\r\n`GET \t/robots.txt  \t\t\t\t\t\t\tApplication.robots`\r\
  \n\r\nUnd hier noch eine [Beispiel robots.txt](/robots.txt \"robots.txt\")"
    description: Wie man dem Play Framework eine Robots.txt unterschiebt.
    gistId: ''
    html_content: "<h2>Zu bearbeitende Dateien:</h2>\n\n<p><code>app/controllers/Application.java</code></p>\n\
  \n<p><code>conf/routes</code></p>\n\n<h2>neue Dateien:</h2>\n\n<p><code>public/robots.txt</code></p>\n\
  \n<p>In der Application.java kommt eine neue statische Funktion hinzu welche sich\
  \ um das cachen und anzeigen der robots.txt kümmert.</p>\n\n<pre><code>public static\
  \ void robots() throws FileNotFoundException {\n    File robots = play.Play.getFile(\"\
  public/robots.txt\");\n    InputStream is = new FileInputStream(robots);\n    response.setHeader(\"\
  Content-Length\", robots.length() + \"\");\n    response.cacheFor(\"2h\");\n   \
  \ response.contentType = \"text/html\";\n    response.direct = is;\n}\n</code></pre>\n\
  \n<p>Um diese Funktion dem Play Framework bekannt zu machen reicht ein Eintrag in\
  \ der routes Datei:</p>\n\n<p><code>GET    /robots.txt                         \
  \    Application.robots</code></p>\n\n<p>Und hier noch eine <a href=\"/robots.txt\"\
  \ title=\"robots.txt\">Beispiel robots.txt</a></p>\n"
    author: User_1

Tag(Tag_14):
    name: RSS

Tag(Tag_8):
    name: Markdown

Tag(Tag_13):
    name: Feeds

Keyword(Keyword_19):
    name: minix

Tag(Tag_7):
    name: robots.txt

Tag(Tag_12):
    name: Atom

Keyword(Keyword_18):
    name: Mongoose

Tag(Tag_6):
    name: Suchmaschinen

Tag(Tag_11):
    name: markdownj

Keyword(Keyword_17):
    name: Linux

Tag(Tag_5):
    name: Playframework

Tag(Tag_10):
    name: markItUp!

Keyword(Keyword_16):
    name: Suchmaschinen

Keyword(Keyword_15):
    name: robots.txt

Keyword(Keyword_14):
    name: routes

Keyword(Keyword_13):
    name: markdownj

Tag(Tag_9):
    name: WYSIWYG

Keyword(Keyword_5):
    name: RSS

Keyword(Keyword_4):
    name: XML-Sitemap

Keyword(Keyword_3):
    name: playframework

Keyword(Keyword_2):
    name: Java

Keyword(Keyword_1):
    name: Tutorial

Tag(Tag_3):
    name: minix

Tag(Tag_4):
    name: Mongoose

Tag(Tag_1):
    name: git

Tag(Tag_2):
    name: Linux

Keyword(Keyword_21):
    name: git

Keyword(Keyword_20):
    name: Linux

Tweet(Tweet_2369):
    tweetId: '55151958759182336'
    content: ' <a href="http://twitter.com/Manscha" target="_blank">@Manscha</a> das lässt
  sich doch kombinieren!'
    createdAt: '2011-04-05'
    user: Sascha Hanke

Tweet(Tweet_2368):
    tweetId: '55192132964712448'
    content: ' RT <a href="http://twitter.com/RobGreen" target="_blank">@RobGreen</a> "Einführung
  in Suchmaschinenoptimierung", ein Leitfaden von Google <a href="http://goo.gl/vrNTU"
  target="_blank">http://goo.gl/vrNTU</a> | via <a href="http://twitter.com/frischkopp"
  target="_blank">@frischkopp</a>'
    createdAt: '2011-04-05'
    user: Sascha Hanke

Tweet(Tweet_14):
    tweetId: '53911477899362304'
    content: ' RT <a href="http://twitter.com/googlechrome" target="_blank">@googlechrome</a>
  No joke. Our Bounce Ball! game is FWA site of the day <a href="http://t11.me/JRR-WG"
  target="_blank">http://t11.me/JRR-WG</a>'
    createdAt: '2011-04-01'
    user: Sascha Hanke

Tweet(Tweet_13):
    tweetId: '53911855458033664'
    content: ' RT <a href="http://twitter.com/Vaiper" target="_blank">@Vaiper</a> Vergleich
  von VMware Server, VMware Player und VMware Workstation <a href="http://networkedblogs.com/fwUB2"
  target="_blank">http://networkedblogs.com/fwUB2</a>'
    createdAt: '2011-04-01'
    user: Sascha Hanke

Tweet(Tweet_16):
    tweetId: '53891107284717568'
    content: ' Markdown WYSIWYG mit markItUp! <a href="http://twitter.com/#!/search?q=%23playframework"
  target="_blank">#playframework</a> <a href="http://twitter.com/#!/search?q=%23tutorial"
  target="_blank">#tutorial</a> <a href="http://bit.ly/play_markitup" target="_blank">http://bit.ly/play_markitup</a>'
    createdAt: '2011-04-01'
    user: Sascha Hanke

Tweet(Tweet_15):
    tweetId: '53892376481116160'
    content: ' So, heute mal die Kommentar Funktion des Blogs überarbeiten, sieht ja schrecklich
  aus. <a href="http://twitter.com/#!/search?q=%23css" target="_blank">#css</a> <a
  href="http://twitter.com/#!/search?q=%23webdesign" target="_blank">#webdesign</a>
  aber erst gibt es was zu futtern ;)'
    createdAt: '2011-04-01'
    user: Sascha Hanke

Tweet(Tweet_18):
    tweetId: '54801659364245504'
    content: ' Kaffe, Kippe und Perl.... ihhh Perl!'
    createdAt: '2011-04-04'
    user: Sascha Hanke

Tweet(Tweet_17):
    tweetId: '53890071950143488'
    content: ' Adminbereich schützen <a href="http://twitter.com/#!/search?q=%23guteidee"
  target="_blank">#guteidee</a> Trackingcode gleich mit dahinter <a href="http://twitter.com/#!/search?q=%23schlechteidee"
  target="_blank">#schlechteidee</a> <a href="http://bit.ly/gNY5aY" target="_blank">http://bit.ly/gNY5aY</a>'
    createdAt: '2011-04-01'
    user: Sascha Hanke

Tweet(Tweet_19):
    tweetId: '54802344478650368'
    content: ' RT <a href="http://twitter.com/waldeis" target="_blank">@waldeis</a> Great
  free application Static HTML to manage nice looking Facebook iFrames for your fan
  page: <a href="http://ow.ly/4q7rk" target="_blank">http://ow.ly/4q7rk</a> <a href="http://twitter.com/#!/search?q=%23staticHTM"
  target="_blank">#staticHTM</a> ...'
    createdAt: '2011-04-04'
    user: Sascha Hanke

Tweet(Tweet_10):
    tweetId: '54137846293987328'
    content: ' hört Tron: Legacy OST und hübscht die Kommentare im Blog auf.'
    createdAt: '2011-04-02'
    user: Sascha Hanke

Tweet(Tweet_11):
    tweetId: '54128118025297920'
    content: ' Kaffee alle, also frisch ans Werk. Kleines Problem mit <a href="http://twitter.com/#!/search?q=%23elasticsearch"
  target="_blank">#elasticsearch</a> und <a href="http://twitter.com/#!/search?q=%23playframework"
  target="_blank">#playframework</a> -> <a href="http://bit.ly/h0JrpS" target="_blank">http://bit.ly/h0JrpS</a>
  für Ideen dankbar'
    createdAt: '2011-04-02'
    user: Sascha Hanke

Tweet(Tweet_12):
    tweetId: '53915167477600256'
    content: ' <3 <a href="http://twitter4j.org" target="_blank">http://twitter4j.org</a>
  großartige Twitter <a href="http://twitter.com/#!/search?q=%23java" target="_blank">#java</a>
  lib <a href="http://bit.ly/aheronde" target="_blank">http://bit.ly/aheronde</a>'
    createdAt: '2011-04-01'
    user: Sascha Hanke

Site(Site_2):
    title: Datenschutzerklärung
    postedAt: '2011-03-28'
    content: "Im yab.-Blog nehmen wir den Schutz Ihrer persönlichen Daten sehr ernst und\
  \ halten uns an die Regeln der Datenschutzgesetze. Die nachfolgende Erklärung gibt\
  \ Ihnen einen Überblick darüber, welche Art von Daten zu welchem Zweck erhoben werden\
  \ und in welchem Umfang diese Daten Dritten zugänglich gemacht werden.\r\n\r\n###\
  \ Datenverarbeitung auf dem yab.-Blog\r\n\r\nIn den unvermeidlichen Serverstatistiken\
  \ werden automatisch solche Daten gespeichert, die Ihr Browser an uns übermittelt.\
  \ Dies sind:\r\n\r\nBrowsertyp/ -version\r\nverwendetes Betriebssystem\r\nReferrer\
  \ URL (die zuvor besuchte Seite)\r\nHostname des zugreifenden Rechners (IP Adresse)\r\
  \nUhrzeit der Serveranfrage.\r\nDiese Daten sind für uns in der Regel nicht bestimmten\
  \ Personen zuordenbar. Eine Zusammenführung dieser Daten mit anderen Datenquellen\
  \ wird nicht vorgenommen, die Daten werden zudem bei der statistischen Auswertung\
  \ anonymisiert.\r\n\r\n### Tracking ausschalten\r\n<iframe frameborder=\"no\" width=\"\
  590px\" height=\"200px\" src=\"http://bumblebee.aheron.de/stats/index.php?module=CoreAdminHome&action=optOut\"\
  ></iframe>\r\n\r\n### Cookies\r\n\r\nDas yab.-Blog verwendet nur Cookies welche\
  \ die Funktion des Blogs sicherstellen und um das Besucherverhalten nachzuvollziehen,\
  \ dies kann unter **Tracking ausschalten** deaktiviert werden, es werden keinerlei\
  \ Cookies zum globalen Tracking (Google Analytics o.Ä.) gesetzt/benutzt.\r\n\r\n\
  ### Kommentare, Emails\r\n\r\nSelbstverständlich erfassen und speichern wir solche\
  \ Informationen, die Sie auf dem Law-Blog eingeben oder uns in sonstiger Weise ü\
  bermitteln. Das betrifft etwa Kommentare, Namen, Email-Adressen und URLs, die Sie\
  \ in die entsprechenden Kommentarfelder eintragen. Diese Angaben geschehen freiwillig\
  \ und werden in keiner Weise überprüft, die Verwendung von Pseudonymen etc. ist\
  \ möglich. Wir weisen darauf hin, dass Name, angegebene Webseite und Kommentare\
  \ für jeden Benutzer der Seite einzusehen sind.\r\n\r\nDaten werden auch erfasst\
  \ und gespeichert, wenn Sie Emails an uns senden.\r\n\r\n\r\n### Auskunftsrecht\r\
  \n\r\nWir würden Ihnen gern Auskunft über die bei uns gespeicherten persönlichen\
  \ Daten geben. Wir wissen allerdings nicht mehr, als Sie auch. Dieses wenige Wissen\
  \ teilen wir im Rahmen der gesetzlichen Auskunftsansprüche allerdings gern nochmals\
  \ mit Ihnen.\r\n\r\nWenn Sie weitere Fragen zur Behandlung Ihrer Daten haben, dann\
  \ senden Sie einfach eine Mail an unsere Adresse     - die finden Sie im [Impressum](http://blog.aheron.de/impressum\
  \ \"Impressum\")."
    html_content: '<p>Im yab.-Blog nehmen wir den Schutz Ihrer persönlichen Daten sehr
  ernst und halten uns an die Regeln der Datenschutzgesetze. Die nachfolgende Erklärung
  gibt Ihnen einen Überblick darüber, welche Art von Daten zu welchem Zweck erhoben
  werden und in welchem Umfang diese Daten Dritten zugänglich gemacht werden.</p>


  <h3>Datenverarbeitung auf dem yab.-Blog</h3>


  <p>In den unvermeidlichen Serverstatistiken werden automatisch solche Daten gespeichert,
  die Ihr Browser an uns übermittelt. Dies sind:</p>


  <p>Browsertyp/ -version

  verwendetes Betriebssystem

  Referrer URL (die zuvor besuchte Seite)

  Hostname des zugreifenden Rechners (IP Adresse)

  Uhrzeit der Serveranfrage.

  Diese Daten sind für uns in der Regel nicht bestimmten Personen zuordenbar. Eine
  Zusammenführung dieser Daten mit anderen Datenquellen wird nicht vorgenommen, die
  Daten werden zudem bei der statistischen Auswertung anonymisiert.</p>


  <h3>Tracking ausschalten</h3>


  <iframe frameborder="no" width="590px" height="200px" src="http://bumblebee.aheron.de/stats/index.php?module=CoreAdminHome&action=optOut"></iframe>


  <h3>Cookies</h3>


  <p>Das yab.-Blog verwendet nur Cookies welche die Funktion des Blogs sicherstellen
  und um das Besucherverhalten nachzuvollziehen, dies kann unter <strong>Tracking
  ausschalten</strong> deaktiviert werden, es werden keinerlei Cookies zum globalen
  Tracking (Google Analytics o.Ä.) gesetzt/benutzt.</p>


  <h3>Kommentare, Emails</h3>


  <p>Selbstverständlich erfassen und speichern wir solche Informationen, die Sie auf
  dem Law-Blog eingeben oder uns in sonstiger Weise übermitteln. Das betrifft etwa
  Kommentare, Namen, Email-Adressen und URLs, die Sie in die entsprechenden Kommentarfelder
  eintragen. Diese Angaben geschehen freiwillig und werden in keiner Weise überprüft,
  die Verwendung von Pseudonymen etc. ist möglich. Wir weisen darauf hin, dass Name,
  angegebene Webseite und Kommentare für jeden Benutzer der Seite einzusehen sind.</p>


  <p>Daten werden auch erfasst und gespeichert, wenn Sie Emails an uns senden.</p>


  <h3>Auskunftsrecht</h3>


  <p>Wir würden Ihnen gern Auskunft über die bei uns gespeicherten persönlichen Daten
  geben. Wir wissen allerdings nicht mehr, als Sie auch. Dieses wenige Wissen teilen
  wir im Rahmen der gesetzlichen Auskunftsansprüche allerdings gern nochmals mit Ihnen.</p>


  <p>Wenn Sie weitere Fragen zur Behandlung Ihrer Daten haben, dann senden Sie einfach
  eine Mail an unsere Adresse     - die finden Sie im <a href="http://blog.aheron.de/impressum"
  title="Impressum">Impressum</a>.</p>

  '
    author: User_1

Site(Site_1):
    title: Impressum
    postedAt: '2011-03-28'
    content: "<img src=\"http://blog.aheron.de/public/images/impressum.png\" alt=\"Impressum\
  \ Karteireiter\" width=\"580\" height=\"150\">\r\n\r\n### Angaben gemäß § 5 TMG:\r\
  \nSascha Hanke  \r\nRommersberger Weg 4  \r\n51766 Engelskirchen  \r\n  \r\n**Kontakt:**\
  \  \r\nE-Mail: s.hanke@aheron.de\r\n\r\n### Verantwortlich für den Inhalt nach §\
  \ 55 Abs. 2 RStV:\r\nSascha Hanke  \r\nRommersberger Weg 4  \r\n51766 Engelskirchen\r\
  \n\r\n###Fotonachweis\r\nDie auf dieser Internetpräsenz verwendeten Fotos sind von\
  \ folgenden Fotografen:  \r\nRainer Sturm „Impressum“ © 2010 <a href=\"http://www.stormpic.de/\"\
  \ target=\"_blank\" title=\"Rainer Sturm/stormpic\">stormpic</a> / aboutpixel.de\r\
  \n\r\n### Haftungsausschluss:\r\n#### Haftung für Inhalte\r\nDie Inhalte unserer\
  \ Seiten wurden mit größter Sorgfalt erstellt. Für die Richtigkeit, Vollständigkeit\
  \ und Aktualität der Inhalte können wir jedoch keine Gewähr übernehmen. Als Diensteanbieter\
  \ sind wir gemäß § 7 Abs.1 TMG für eigene Inhalte auf diesen Seiten nach den allgemeinen\
  \ Gesetzen verantwortlich. Nach §§ 8 bis 10 TMG sind wir als Diensteanbieter jedoch\
  \ nicht verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen\
  \ oder nach Umständen zu forschen, die auf eine rechtswidrige Tätigkeit hinweisen.\
  \ Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach\
  \ den allgemeinen Gesetzen bleiben hiervon unberührt. Eine diesbezügliche Haftung\
  \ ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung\
  \ möglich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese\
  \ Inhalte umgehend entfernen.\r\n\r\n#### Haftung für Links\r\nUnser Angebot enthä\
  lt Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben.\
  \ Deshalb können wir für diese fremden Inhalte auch keine Gewähr übernehmen. Fü\
  r die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber\
  \ der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung\
  \ auf mögliche Rechtsverstöße überprüft. Rechtswidrige Inhalte waren zum Zeitpunkt\
  \ der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten\
  \ Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar.\
  \ Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.\r\
  \n\r\n#### Urheberrecht\r\nDie durch die Seitenbetreiber erstellten Inhalte und\
  \ Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielfä\
  ltigung, Bearbeitung, Verbreitung und jede Art der Verwertung außerhalb der Grenzen\
  \ des Urheberrechtes bedürfen der schriftlichen Zustimmung des jeweiligen Autors\
  \ bzw. Erstellers. Downloads und Kopien dieser Seite sind nur für den privaten,\
  \ nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht\
  \ vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere\
  \ werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine\
  \ Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden\
  \ Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte\
  \ umgehend entfernen.\r\n"
    html_content: '<p><img src="http://blog.aheron.de/public/images/impressum.png" alt="Impressum
  Karteireiter" width="580" height="150"></p>


  <h3>Angaben gemäß § 5 TMG:</h3>


  <p>Sascha Hanke <br />

  Rommersberger Weg 4 <br />

  51766 Engelskirchen  </p>


  <p><strong>Kontakt:</strong> <br />

  E-Mail: s.hanke@aheron.de</p>


  <h3>Verantwortlich für den Inhalt nach § 55 Abs. 2 RStV:</h3>


  <p>Sascha Hanke <br />

  Rommersberger Weg 4 <br />

  51766 Engelskirchen</p>


  <h3>Fotonachweis</h3>


  <p>Die auf dieser Internetpräsenz verwendeten Fotos sind von folgenden Fotografen:
  <br />

  Rainer Sturm „Impressum“ © 2010 <a href="http://www.stormpic.de/" target="_blank"
  title="Rainer Sturm/stormpic">stormpic</a> / aboutpixel.de</p>


  <h3>Haftungsausschluss:</h3>


  <h4>Haftung für Inhalte</h4>


  <p>Die Inhalte unserer Seiten wurden mit größter Sorgfalt erstellt. Für die Richtigkeit,
  Vollständigkeit und Aktualität der Inhalte können wir jedoch keine Gewähr übernehmen.
  Als Diensteanbieter sind wir gemäß § 7 Abs.1 TMG für eigene Inhalte auf diesen Seiten
  nach den allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 TMG sind wir als
  Diensteanbieter jedoch nicht verpflichtet, übermittelte oder gespeicherte fremde
  Informationen zu überwachen oder nach Umständen zu forschen, die auf eine rechtswidrige
  Tätigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von
  Informationen nach den allgemeinen Gesetzen bleiben hiervon unberührt. Eine diesbezügliche
  Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung
  möglich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese
  Inhalte umgehend entfernen.</p>


  <h4>Haftung für Links</h4>


  <p>Unser Angebot enthält Links zu externen Webseiten Dritter, auf deren Inhalte
  wir keinen Einfluss haben. Deshalb können wir für diese fremden Inhalte auch keine
  Gewähr übernehmen. Für die Inhalte der verlinkten Seiten ist stets der jeweilige
  Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden
  zum Zeitpunkt der Verlinkung auf mögliche Rechtsverstöße überprüft. Rechtswidrige
  Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche
  Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung
  nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links
  umgehend entfernen.</p>


  <h4>Urheberrecht</h4>


  <p>Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten
  unterliegen dem deutschen Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung
  und jede Art der Verwertung außerhalb der Grenzen des Urheberrechtes bedürfen der
  schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien
  dieser Seite sind nur für den privaten, nicht kommerziellen Gebrauch gestattet.
  Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden
  die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche
  gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam
  werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen
  werden wir derartige Inhalte umgehend entfernen.</p>

  '
    author: User_1

Keyword(Keyword_6):
    name: Feeds

Keyword(Keyword_7):
    name: Atom

Keyword(Keyword_8):
    name: Framework

Keyword(Keyword_9):
    name: Play

Tweet(Tweet_2377):
    tweetId: '56414861227331584'
    content: ' <a href="http://twitter.com/Manscha" target="_blank">@Manscha</a> das sind
  ganz spezielle Taschenlampen, normales Licht würde doch den Tatort verschmutzen!'
    createdAt: '2011-04-08'
    user: Sascha Hanke

Tweet(Tweet_2376):
    tweetId: '56392372233306112'
    content: ' <a href="http://twitter.com/_felipera" target="_blank">@_felipera</a> <a href="http://bumblebee.aheron.de/code/twitter.zip"
  target="_blank">http://bumblebee.aheron.de/code/twitter.zip</a>'
    createdAt: '2011-04-08'
    user: Sascha Hanke

Tweet(Tweet_1):
    tweetId: '54593065775673344'
    content: ' <a href="http://twitter.com/_felipera" target="_blank">@_felipera</a> next
  weekend I build you a sample app and thank you for the bug notice'
    createdAt: '2011-04-03'
    user: Sascha Hanke

Tweet(Tweet_2375):
    tweetId: '56322398391242753'
    content: ' <a href="http://twitter.com/_felipera" target="_blank">@_felipera</a> I dont
  think the problem is the database, but the job. the code runs in the controller
  but not in the job. any idea?'
    createdAt: '2011-04-08'
    user: Sascha Hanke

Tweet(Tweet_2374):
    tweetId: '56310054919471104'
    content: ' <a href="http://twitter.com/_felipera" target="_blank">@_felipera</a> update:
  i just build the example app, db=mem no problems, with db=mysql:prime@prime_yab_dev,
  the problem occurs'
    createdAt: '2011-04-08'
    user: Sascha Hanke

Tweet(Tweet_4):
    tweetId: '54343924084506624'
    content: ' RT <a href="http://twitter.com/waldeis" target="_blank">@waldeis</a> Wer es
  verpasst hat: Googles SEO Guide jetzt auch auf deutsch verfügbar: <a href="http://bit.ly/i1PKeU"
  target="_blank">http://bit.ly/i1PKeU</a> <a href="http://twitter.com/#!/search?q=%23seo"
  target="_blank">#seo</a>'
    createdAt: '2011-04-03'
    user: Sascha Hanke

Tweet(Tweet_2373):
    tweetId: '56286635679170560'
    content: ' Juhu, werde es mir direkt zulegen     - Atari''s Greatest Hits     - <a href="http://itun.es/i6d6HG"
  target="_blank">http://itun.es/i6d6HG</a>'
    createdAt: '2011-04-08'
    user: Sascha Hanke

Tweet(Tweet_5):
    tweetId: '54328046848716801'
    content: ' <a href="http://twitter.com/Vaiper" target="_blank">@Vaiper</a> lohnt das
  mit den <a href="http://twitter.com/#!/search?q=%23networkedblogs" target="_blank">#networkedblogs</a>
  ?'
    createdAt: '2011-04-03'
    user: Sascha Hanke

Tweet(Tweet_2372):
    tweetId: '56104937385492480'
    content: ' Ben the Bodyguard. Bin gespannt, die Seite sieht gut aus <a href="http://bit.ly/i8k3Hb"
  target="_blank">http://bit.ly/i8k3Hb</a>'
    createdAt: '2011-04-07'
    user: Sascha Hanke

Tweet(Tweet_2):
    tweetId: '54347829778460672'
    content: ' RT <a href="http://twitter.com/grindcrank" target="_blank">@grindcrank</a>
  Schenke Oma zum Geburtstag mit Sourcecode bedrucktes Porzellan     - "Software as a
  Service".'
    createdAt: '2011-04-03'
    user: Sascha Hanke

Tweet(Tweet_2371):
    tweetId: '56018992824991745'
    content: ' RT <a href="http://twitter.com/webserver" target="_blank">@webserver</a> Dynamic
  Hosting on Cherokee: “Cherokee vs Apache Benchmarks” ➭ <a href="http://blog.dynamichosting.biz/?p=369"
  target="_blank">http://blog.dynamichosting.biz/?p=369</a>'
    createdAt: '2011-04-07'
    user: Sascha Hanke

Tweet(Tweet_3):
    tweetId: '54346309871730688'
    content: ' <a href="http://twitter.com/#!/search?q=%23Futurama" target="_blank">#Futurama</a>
  der letzte <a href="http://twitter.com/#!/search?q=%23Trekki" target="_blank">#Trekki</a>
  yeha!'
    createdAt: '2011-04-03'
    user: Sascha Hanke

Tweet(Tweet_2370):
    tweetId: '55151368473804800'
    content: ' RT <a href="http://twitter.com/lmcalpin" target="_blank">@lmcalpin</a> <a
  href="http://twitter.com/#!/search?q=%23playframework" target="_blank">#playframework</a>
  1.2RC1 dropped <a href="http://twitter.com/" target="_blank">@</a> <a href="http://bit.ly/efc431"
  target="_blank">http://bit.ly/efc431</a> and it''s dead sexy.'
    createdAt: '2011-04-05'
    user: Sascha Hanke

Tweet(Tweet_8):
    tweetId: '54240513116737536'
    content: ' <a href="http://twitter.com/_felipera" target="_blank">@_felipera</a> thx
  a lot!'
    createdAt: '2011-04-02'
    user: Sascha Hanke

Tweet(Tweet_9):
    tweetId: '54139222172512256'
    content: ' <a href="http://twitter.com/_felipera" target="_blank">@_felipera</a> any
  idea? <a href="https://gist.github.com/899005" target="_blank">https://gist.github.com/899005</a>'
    createdAt: '2011-04-02'
    user: Sascha Hanke

Tweet(Tweet_6):
    tweetId: '54283092432654336'
    content: ' RT <a href="http://twitter.com/sixtus" target="_blank">@sixtus</a> "Würde
  man das geltende Datenschutzrecht eng und konsequent anwenden, dann müsste Deutschland
  offline gehen." <a href="http://bit.ly/" target="_blank">http://bit.ly/</a> ...'
    createdAt: '2011-04-02'
    user: Sascha Hanke

Tweet(Tweet_7):
    tweetId: '54282545512185856'
    content: ' Erster Part des Redesigns abgeschlossen     - Blogengine based on <a href="http://twitter.com/#!/search?q=%23playwramework"
  target="_blank">#playwramework</a>     - <a href="http://bit.ly/ih40LU" target="_blank">http://bit.ly/ih40LU</a>'
    createdAt: '2011-04-02'
    user: Sascha Hanke

Tweet(Tweet_22):
    tweetId: '55011863888543744'
    content: ' STFU schützen lassen, T-Shirt Shops abmahnen ... Profit??? Sind WTF und RTFM
  noch als Marke frei? <a href="http://bit.ly/gWLs97" target="_blank">http://bit.ly/gWLs97</a>'
    createdAt: '2011-04-04'
    user: Sascha Hanke

Tweet(Tweet_20):
    tweetId: '54901772875071488'
    content: ' RT <a href="http://twitter.com/addyosmani" target="_blank">@addyosmani</a>
  CSS3 Animation With jQuery Fallbacks <a href="http://bit.ly/ifPZnw" target="_blank">http://bit.ly/ifPZnw</a>
  <a href="http://twitter.com/#!/search?q=%23jquery" target="_blank">#jquery</a> <a
  href="http://twitter.com/#!/search?q=%23css3" target="_blank">#css3</a> <a href="http://twitter.com/#!/search?q=%23animation"
  target="_blank">#animation</a>'
    createdAt: '2011-04-04'
    user: Sascha Hanke

Tweet(Tweet_21):
    tweetId: '54944078604926976'
    content: ' Schick: "Aristo" for jQuery UI <a href="http://bit.ly/fKhxqs" target="_blank">http://bit.ly/fKhxqs</a>'
    createdAt: '2011-04-04'
    user: Sascha Hanke

Comment(Comment_1):
    author: Arne
    postedAt: '2011-03-30'
    content: Zeilenumbrüche... :-)
    post: Post_4
    spam: 'false'

Comment(Comment_2):
    author: Sascha Hanke
    postedAt: '2011-03-30'
    content: "pfft, Zeilenumbrüche kann doch jeder! Im Code kommt das immer doof, mal\
  \ schauen ob ich ein div mit scrolling drumherum basteln kann :)\r\n\r\nNaja am\
  \ Design muss ich eh noch einiges machen."
    post: Post_4
    url: http://blog.aheron.de
    email: s.hanke@aheron.de
    spam: 'false'

Comment(Comment_3):
    author: Ich
    postedAt: '2011-04-01'
    content: doof hier alles... ich hau wieder ab!
    post: Post_4
    spam: 'false'

Comment(Comment_4):
    author: Sascha Hanke
    postedAt: '2011-04-03'
    content: So, &quot;umbruch&quot; klappt und Gravatar hoffentlich auch.
    post: Post_4
    url: http://blog.aheron.de
    email: s.hanke@aheron.de
    spam: 'false'